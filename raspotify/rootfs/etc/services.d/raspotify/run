#!/usr/bin/with-contenv bashio
# ==============================================================================
# Runs the raspotify Server
# ==============================================================================
# shellcheck disable=SC1091

# Run raspotify
DEVICE_NAME="$(bashio::config 'name')"
BITRATE="$(bashio::config 'bitrate')"
BACKEND="$(bashio::config 'backend')"

if bashio::config.has_value 'extra_options'; then
	OPTIONS="$(bashio::config 'extra_options')"
else
	OPTIONS=""
fi

if bashio::config.equals 'backend' 'pipe'; then
	if bashio::config.exists 'device' && bashio::config.has_value 'device'; then
		DEVICE=$(bashio::config 'device')
		OPTIONS='--device '"${DEVICE}"' '"${OPTIONS}"
		if [ -p "${DEVICE}" ]; then
			bashio::log.info "Pipe '${DEVICE}' already exists - using that one."
		else
			if $(mkfifo -m 666 "${DEVICE}"); then
				bashio::log.info "Created pipe at '${DEVICE}'."
			else
				bashio::log.error "Could not create pipe at '${DEVICE}'. Maybe a file exists at that path?"
			fi
		fi
	else
		bashio::log.error "Found 'backend: pipe' in configuration but no value for 'device'."
	fi
fi

if bashio::config.exists 'metadata_pipe' && bashio::config.has_value 'metadata_pipe'; then
	METADATA_PIPE=$(bashio::config 'metadata_pipe')
	OPTIONS='--metadata-pipe '"${METADATA_PIPE}"' '"${OPTIONS}"
	if [ -p "${METADATA_PIPE}" ]; then
		bashio::log.info "Pipe '${METADATA_PIPE}' already exists - using that one."
	else
		if $(mkfifo -m 666 "${METADATA_PIPE}"); then
			bashio::log.info "Created pipe at '${METADATA_PIPE}'."
		else
			bashio::log.error "Could not create pipe at '${METADATA_PIPE}'. Maybe a file exists at that path?"
		fi
	fi
fi

if bashio::config.has_value 'username' && bashio::config.has_value 'password'; then
	OPTIONS='--username '"$(bashio::config 'username')"' --password '"$(bashio::config 'password')"' '"${OPTIONS}"
fi

if bashio::config.equals 'volume_normalisation' true; then
	OPTIONS='--enable-volume-normalisation '"${OPTIONS}"
fi
OPTIONS='--mixer-linear-volume --initial-volume=100 '"${OPTIONS}"

if bashio::config.equals 'log_level' 'debug'; then
	OPTIONS='--verbose '"${OPTIONS}"
fi

bashio::log.info 'Starting the raspotify Server...'
exec /usr/bin/librespot --name "${DEVICE_NAME}" --backend $BACKEND --bitrate ${BITRATE} ${OPTIONS}
